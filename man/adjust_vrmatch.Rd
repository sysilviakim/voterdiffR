% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adjust_vrmatch.R
\name{adjust_vrmatch}
\alias{adjust_vrmatch}
\title{Adjust for Duplicates and False Negatives for All Snapshots}
\usage{
adjust_vrmatch(dedup_ids = c("lVoterUniqueID", "sAffNumber"),
  fn_ids = c("lVoterUniqueID", "sAffNumber"), adj_prefix = "adj_",
  adj_suffix = "", date_df = NULL, start = "2018-04-26",
  end = "2021-01-01", path = "7z",
  pattern = "^(?=.*Cntywd_)(?!.*Hist)", file_type_snapshot = ".txt",
  file_type_cleaned = ".Rda", id = "\%m\%d\%y", rec = FALSE,
  per = 1, prefix = "Cntywd_", path_changes = "changes",
  path_reports = "reports", path_matches = "matches",
  vars_change = NULL, date_label = "date_label", nrow = "nrow",
  path_clean = "clean_df", clean_prefix = "df_cleaned_",
  clean_suffix = "")
}
\arguments{
\item{dedup_ids}{The ID variables to correct for duplicates.
Default is c("lVoterUniqueID", "sAffNumber").}

\item{fn_ids}{The ID variables to correct for false negatives.
Default is c("lVoterUniqueID", "sAffNumber").}

\item{adj_prefix}{File prefix for saving deduped objects for all matches,
changes, and reports. Defaults to "dedup_". If set to empty string as well
as adj_suffix, this will overwrite the existing pre-deduplication outputs,
and this must be done with caution.}

\item{adj_suffix}{File suffix for saving deduped objects.}

\item{date_df}{List of snapshots. Defaults to NULL,
in which case the function will detect all snapshots available.}

\item{start}{The start date of the first snapshot.
Defaults to April 26, 2018.}

\item{end}{The end date of the last snapshot.
Defaults to Jan 1, 2021.}

\item{path}{Path where all snapshots are stored.
Defaults to subfolder 7z.}

\item{pattern}{Regular expression of the file pattern to find.
Defaults to a particular pattern of OCROV files.}

\item{file_type_snapshot}{File type for `snapshot_list()`.
Defaults to .txt.}

\item{file_type_cleaned}{File type for `clean_import()`.
Defaults to .Rda.}

\item{id}{How the snapshot files are formatted/labelled for their IDs.
Defaults to mdy.}

\item{rec}{Whether to find files recursively.
Defaults to FALSE.}

\item{per}{Period of each snapshot---whether daily, weekly, and so on.
Defaults to 1 (equivalent to "day"). Any valid input for base seq.Date
by argument is allowed.}

\item{prefix}{File name prefix.
Defaults to Cntywd_.}

\item{path_changes}{Path where the extracted changes are output to.
Defaults to "changes".}

\item{path_reports}{Path where the summarized changes are output to.
Defaults to "reports".}

\item{path_matches}{Path where the match outcomes are output to.
Defaults to "matches".}

\item{vars_change}{Variables to track changes of.
Defaults to NULL, which will then track all variables.}

\item{date_label}{Labels for dates (i.e., snapshot IDs), in `date_df`.
Defaults to "date_label".}

\item{nrow}{Name of list element which will contain the number of rows
of the input list dataframes.}

\item{path_clean}{Path to the cleaned snapshots.
Defaults to "clean_df".}

\item{clean_prefix}{File prefixes for cleaned snapshots.
Defaults to "df_cleaned_".}

\item{clean_suffix}{File suffixes for cleaned snapshots.
Defaults to empty string.}
}
\value{
A named list of dataframes similar to vrmatch output but with
perfect duplicates by the matching variables cleaned.
}
\description{
This function applies and `adjust_fn` and `adjust_dups` to all snapshots
specified, and exports the adjusted match, corresponding changes, and
summaries of these changes.
}
\details{
The function should not be pre-applied if the user intends to do a
performance evaluation.
}
